/**
 * The MIT License
 * Copyright (c) 2014 Ilkka Seppälä
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package com.iluwatar.serverless.baas.model;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.fasterxml.jackson.annotation.JsonProperty;

import java.io.Serializable;

/**
 * Person class
 * Created by dheeraj.mummarareddy on 3/4/18.
 */
@DynamoDBTable(tableName = "persons")
public class Person implements Serializable {
  public static boolean[] coverage;
  public static boolean[] totalCoverage;
  public static final String[] EQUALS_CONDS = {"this == o",
      "o == null", "getClass() != o.getClass()",
      "firstName != null && !firstName.equals(person.firstName)",
      "firstName == null && person.firstName != null", "lastName != null && !lastName.equals(person.lastName)",
      "lastName == null && person.lastName != null", "address != null", "default"};

  private static final long serialVersionUID = -3413087924608627075L;

  private String id;
  private String firstName;
  private String lastName;
  private Address address;

  @JsonProperty(access = JsonProperty.Access.READ_ONLY)
  @DynamoDBHashKey(attributeName = "id")
  @DynamoDBAutoGeneratedKey
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  @DynamoDBAttribute(attributeName = "firstName")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  @DynamoDBAttribute(attributeName = "lastName")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  @DynamoDBAttribute(attributeName = "address")
  public Address getAddress() {
    return address;
  }

  public void setAddress(Address address) {
    this.address = address;
  }

  @Override
  public boolean equals(Object o) {
    coverage[8] = true; //Default
    if (this == o) {
      coverage[0] = true;
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      if (o == null) {
        coverage[1] = true;
        return false;
      }
      if (getClass() != o.getClass()) {
        coverage[2] = true;
        return false;
      }
    }

    Person person = (Person) o;

    if (firstName != null ? !firstName.equals(person.firstName) : person.firstName != null) {
      if (firstName != null && !firstName.equals(person.firstName)) {
        coverage[3] = true;
      }
      if (firstName == null && person.firstName != null) {
        coverage[4] = true;
      }
      return false;
    }

    if (lastName != null ? !lastName.equals(person.lastName) : person.lastName != null) {
      if (lastName != null && !lastName.equals(person.lastName)) {
        coverage[5] = true;
      }
      if (lastName == null && person.lastName != null) {
        coverage[6] = true;
      }
      return false;
    }

    if (address != null) {
      coverage[7] = true;
    }
    return address != null ? address.equals(person.address) : person.address == null;
  }

  @Override
  public int hashCode() {
    int result = firstName != null ? firstName.hashCode() : 0;
    result = 31 * result + (lastName != null ? lastName.hashCode() : 0);
    result = 31 * result + (address != null ? address.hashCode() : 0);
    return result;
  }

  @Override
  public String toString() {
    return "Person{"
        + "id='" + id + '\''
        + ", firstName='" + firstName + '\''
        + ", lastName='" + lastName + '\''
        + ", address=" + address
        + '}';
  }
}
